//
//  RootPresenter.swift
//  ViperTaskManager
//
//  Created by Aaron Lee on 20/02/16.
//  Copyright Â© 2016 One Fat Giraffe. All rights reserved.
//
//  Generated by Swift-Viper templates. Find latest version at https://github.com/Nikita2k/SwiftViper
//

import UIKit

protocol RootPresenterProtocol: class {
    func openListViewController()
}

protocol RootInterfaceProtocol: class {
    
    var presenter: RootPresenterProtocol!  { get set }
    
}

class RootPresenter {

	weak private var interface: RootInterfaceProtocol?
	private let interactor: RootInteractorInputProtocol
    private let router: RootRouterInputProtocol

    init(interface: RootInterfaceProtocol, interactor: RootInteractorInputProtocol, router: RootRouterInputProtocol) {
        self.interface = interface
        self.interactor = interactor
        self.router = router
    }
    
}

extension RootPresenter: RootPresenterProtocol {
   
    func openListViewController() {
        self.router.openListViewController(fromViewController: interface as! UIViewController)
    }
    
}

extension RootPresenter: RootInteractorOutputProtocol {
    
}

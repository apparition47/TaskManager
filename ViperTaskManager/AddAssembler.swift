
//  AddAssembler.swift
//  ViperTaskManager
//
//  Created by Aaron Lee on 19/02/16.
//  Copyright Â© 2016 One Fat Giraffe. All rights reserved.
//
//  Generated by Swift-Viper templates. Find latest version at https://github.com/Nikita2k/SwiftViper
//

import UIKit
import Swinject
import SwinjectStoryboard

class AddAssembler {
    let assembler: Assembler
    
    init(parentAssembler: Assembler) {
        assembler = Assembler([AddContainer()], parent: parentAssembler)
    }
}

extension AddAssembler {
    func presentAddViewController(fromViewController: UIViewController, project: Project?) {
        let viewController = storyboard().instantiateViewController(withIdentifier: "AddTableViewControllerID") as! AddTableViewController
        viewController.project = project
        viewController.tasks = project!.tasks
        
        viewController.presenter.delegate = fromViewController as? AddViewControllerDelegate
    
        let idiom = UIDevice.current.userInterfaceIdiom
        switch idiom {
        case .phone:
            let navigationController = UINavigationController(rootViewController: viewController)
            fromViewController.present(navigationController, animated: true, completion: nil)
            
        case .pad:
            // TODO split screen
            fromViewController.navigationController!.pushViewController(viewController, animated: true)
        
        default:
            fatalError("Device is not supported yet")
        }
    }
    
    func storyboard() -> SwinjectStoryboard {
        return SwinjectStoryboard.create(name: "List", bundle: Bundle.main, container: assembler.resolver)
    }
}
